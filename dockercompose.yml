version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  frontend:
    image: node:18
    command: sh -c "npx create-react-app my-app && cd my-app && npm start"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always
    networks:
      - app_network

  backend:
    image: openjdk:17-jdk-slim # Or your preferred Java 17 image
    ports:
      - "8080:8080" # Default Spring Boot port
    depends_on:
      - db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/mydatabase
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=rootpassword
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update # Or validate, create, etc.
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    volumes:
      - ./backend:/app # Mount your Spring Boot application code
    working_dir: /app
    command: ./gradlew bootRun # Or ./mvnw spring-boot:run, if maven. Make sure your gradle/maven wrapper exists in ./backend
    restart: always
    networks:
      - app_network

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    networks:
      - app_network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app_network

volumes:
  db_data:
